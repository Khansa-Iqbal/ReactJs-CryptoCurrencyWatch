{"version":3,"sources":["SideBarStyle.js","Components/FilterContext.js","Components/NavBar.js","Components/CryptoCurrency.js","Components/Pagination.js","Components/CryptoCurrenciesList.js","Components/ThemeContext.js","Components/DisplayCurrency.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","content","flexGrow","padding","spacing","PageSizeFilterContext","React","createContext","ColorFilterContext","RarityFilterContext","SuperTypeFilterContext","NavBar","classes","useTheme","className","CssBaseline","AppBar","position","color","clsx","Toolbar","Typography","variant","MagicCard","props","magicCard","Card","CardMedia","style","height","paddingTop","image","imageUrl","title","name","CardContent","gutterBottom","component","colors","rarity","CardActions","to","id","Button","size","target","Pagination","cardsPerPage","totalCards","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","CardList","useState","cards","setCards","loading","setLoading","filter","sortType","setSortType","currentCard","setCurrentCard","useContext","pageSizeFilter","colorFilter","rarityFilter","superTypeFilter","useEffect","axios","get","then","response","data","console","log","catch","error","sortedCards","sort","a","b","localeCompare","indexOfLastCard","indexOfFirstCard","currentCards","slice","endIcon","Grid","container","includes","item","xs","sm","lg","xl","length","pageNumber","ThemeContext","background","DisplayCard","cardDetails","fetchCardDetails","match","params","card","defaultProps","bgcolor","borderColor","m","border","width","Box","marginLeft","borderRadius","src","alt","layout","text","history","goBack","startIcon","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aecfaf7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n//const drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  // appBarShift: {\r\n  //   width: `calc(100% - ${drawerWidth}px)`,\r\n  //   marginLeft: drawerWidth,\r\n  //   transition: theme.transitions.create(['margin', 'width'], {\r\n  //     easing: theme.transitions.easing.easeOut,\r\n  //     duration: theme.transitions.duration.enteringScreen,\r\n  //   }),\r\n  // },\r\n  // menuButton: {\r\n  //   marginRight: theme.spacing(2),\r\n  // },\r\n  // hide: {\r\n  //   display: 'none',\r\n  // },\r\n  // drawer: {\r\n  //   width: drawerWidth,\r\n  //   flexShrink: 0, \r\n  // },\r\n  // drawerPaper: {\r\n  //   width: drawerWidth,\r\n  // },\r\n  // drawerHeader: {\r\n  //   display: 'flex',\r\n  //   alignItems: 'center',\r\n  //   padding: theme.spacing(0, 1),\r\n  //   // necessary for content to be below app bar\r\n  //   ...theme.mixins.toolbar,\r\n  //   justifyContent: 'flex-end',\r\n  // },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    //marginLeft: -drawerWidth,\r\n  },\r\n  // contentShift: {\r\n  //   transition: theme.transitions.create('margin', {\r\n  //     easing: theme.transitions.easing.easeOut,\r\n  //     duration: theme.transitions.duration.enteringScreen,\r\n  //   }),\r\n  //   marginLeft: 0,\r\n  // },\r\n}));"," import React,{createContext, useState} from 'react';\r\n\r\n export const PageSizeFilterContext = React.createContext();\r\n export const PageSizeFilterProvider= (props)=>\r\n {\r\n    const [pageSizeFilter, setPageSizeFilter] =  useState(8);\r\n    return(\r\n        <PageSizeFilterContext.Provider value={[pageSizeFilter, setPageSizeFilter]}>\r\n        {props.children}\r\n        </PageSizeFilterContext.Provider>\r\n         );\r\n }\r\n\r\n /////////////////////////////\r\n\r\n export const ColorFilterContext = React.createContext();\r\n export const ColorFilterProvider= (props)=>\r\n {\r\n    const [colorFilter, setColorFilter] =  useState('');\r\n    return(\r\n        <ColorFilterContext.Provider value={[colorFilter, setColorFilter]}>\r\n        {props.children}\r\n        </ColorFilterContext.Provider>\r\n         );\r\n }\r\n\r\n /////////////////////////////\r\n\r\n export const RarityFilterContext = React.createContext();\r\n export const RarityFilterProvider= (props)=>\r\n {\r\n    const [rarityFilter, setRarityFilter] =  useState('');\r\n    return(\r\n        <RarityFilterContext.Provider value={[rarityFilter, setRarityFilter]}>\r\n        {props.children}\r\n        </RarityFilterContext.Provider>\r\n         );\r\n }\r\n\r\n /////////////////////////////\r\n\r\n export const SuperTypeFilterContext = React.createContext();\r\n export const SuperTypeFilterProvider= (props)=>\r\n {\r\n    const [superTypeFilter, setSuperTypeFilter] =  useState('');\r\n    return(\r\n        <SuperTypeFilterContext.Provider value={[superTypeFilter, setSuperTypeFilter]}>\r\n        {props.children}\r\n        </SuperTypeFilterContext.Provider>\r\n         );\r\n }","import React, {useContext} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport clsx from 'clsx';\r\nimport {useStyles} from '../SideBarStyle';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {PageSizeFilterContext, ColorFilterContext, RarityFilterContext, SuperTypeFilterContext} from './FilterContext';\r\n\r\nfunction NavBar (){\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    // const [open, setOpen] = React.useState(false);\r\n    // const handleDrawerOpen = () => {setOpen(true);};\r\n    // const handleDrawerClose = () => {setOpen(false);};\r\n\r\n    //  const[pageSizeFilter, setPageSizeFilter] = useContext(PageSizeFilterContext);\r\n    //  const[colorFilter, setColorFilter] = useContext(ColorFilterContext);\r\n    //  const[rarityFilter, setRarityFilter] = useContext(RarityFilterContext);\r\n    //  const[superTypeFilter, setSuperTypeFilter] = useContext(SuperTypeFilterContext);\r\n\r\n    //  const colorHandleChange = (event) => {\r\n    //     setColorFilter(event.target.value);\r\n    //  };\r\n    // const rarityHandleChange = (event) => {\r\n    //     setRarityFilter(event.target.value);\r\n    // };\r\n    // const superTypeHandleChange = (event) => {\r\n    //     setSuperTypeFilter(event.target.value);\r\n    // };\r\n    // const pageSizeHandleChange = (event) => {\r\n    //     setPageSizeFilter(event.target.value);\r\n    // };\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" color=\"secondary\"\r\n              className={clsx(classes.appBar, {\r\n               // [classes.appBarShift]: open,\r\n              })}>\r\n                <Toolbar >\r\n                {/* <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                  <FilterList/>\r\n                </IconButton> */}\r\n                    <Typography variant=\"h3\" color=\"inherit\">\r\n                        Crypto Currencies Watch\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* <Drawer\r\n              className={classes.drawer}\r\n              variant=\"persistent\"\r\n              anchor=\"left\"\r\n              open={open}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n              </div>\r\n              <Divider /><br/>\r\n\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel>COLOR</InputLabel>\r\n                    <Select\r\n                    value={colorFilter}\r\n                    onChange={colorHandleChange}\r\n                    label=\"Color\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Black\">Black</MenuItem>\r\n                    <MenuItem value=\"Blue\">Blue</MenuItem>\r\n                    <MenuItem value=\"Green\">Green</MenuItem>\r\n                    <MenuItem value=\"Red\">Red</MenuItem>\r\n                    <MenuItem value=\"White\">White</MenuItem>\r\n                    </Select>\r\n             </FormControl><br/><br/> \r\n             \r\n             <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel>RARITY</InputLabel>\r\n                    <Select\r\n                    value={rarityFilter}\r\n                    onChange={rarityHandleChange}\r\n                    label=\"Rarity\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>                   \r\n                    <MenuItem value=\"Rare\">Rare</MenuItem>\r\n                    <MenuItem value=\"Uncommon\">Uncommon</MenuItem>\r\n                    <MenuItem value=\"Common\">Common</MenuItem>\r\n                    </Select>\r\n            </FormControl><br/><br/>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel>SUPER TYPE</InputLabel>\r\n                    <Select\r\n                    value={superTypeFilter}\r\n                    onChange={superTypeHandleChange}\r\n                    label=\"SuperType\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Basic\">Basic</MenuItem>\r\n                    <MenuItem value=\"Host\">Host</MenuItem>\r\n                    <MenuItem value=\"Legendary\">Legendary</MenuItem>\r\n                    <MenuItem value=\"Ongoing\">Ongoing</MenuItem>\r\n                    <MenuItem value=\"Snow\">Snow</MenuItem>\r\n                    <MenuItem value=\"World\">World</MenuItem>\r\n                    </Select>\r\n            </FormControl><br/><br/>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel>PAGE SIZE</InputLabel>\r\n                    <Select\r\n                    value={pageSizeFilter}\r\n                    onChange={pageSizeHandleChange}\r\n                    label=\"PageSize\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"10\">10</MenuItem>\r\n                    <MenuItem value=\"25\">25</MenuItem>\r\n                    <MenuItem value=\"50\">50</MenuItem>\r\n                    </Select>\r\n            </FormControl>\r\n            </Drawer> */}\r\n        </div>\r\n    )\r\n}         \r\nexport default NavBar;\r\n\r\n\r\n \r\n    \r\n    \r\n\r\n\r\n              \r\n","import React, {useContext}from 'react';\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {Link} from 'react-router-dom';\r\nimport {FilterContext} from '../App';\r\n\r\nconst MagicCard = (props) => {\r\n    return(\r\n        <div>\r\n            {props.magicCard ? (\r\n                (<Card>\r\n                    <CardMedia style={{height: 50, paddingTop: '120%'}}\r\n                    image ={props.magicCard.imageUrl}\r\n                    title={props.magicCard.name}\r\n                    />\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"headline\" component =\"h2\">\r\n                            {props.magicCard.name}\r\n                        </Typography>\r\n                        <Typography component =\"p\" >\r\n                           Colors:  {props.magicCard.colors}\r\n                           <br/>\r\n                           Rarity: {props.magicCard.rarity}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {/* <Button size=\"small\" color =\"primary\" href ={props.magicCard.imageUrl} target=\"_blank\"> */}\r\n                        <Link to ={`/${props.magicCard.id}`}>\r\n                        <Button size=\"small\" color =\"primary\"  target=\"_blank\">\r\n                            Show the magic card\r\n                        </Button>\r\n                        </Link>\r\n                    </CardActions>\r\n                </Card>)\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\nexport default MagicCard\r\n//href ={`https://api.magicthegathering.io/v1/cards/`+props.magicCard.id}\r\n//onClick ={()=>history.push(`/${props.magicCard.id}`)}\r\n// onClick ={() =><DisplayCard id ={props.magicCard.id}/>}\r\n\r\n// if(appliedFilters.color || appliedFilters.rarity || appliedFilters.supertype) !==\"\" \r\n// && (\r\n//     (props.magicCard.colors.indexOf(appliedFilters.color))\r\n//  || (props.magicCard.rarity.indexOf(appliedFilters.rarity) )\r\n//  || (props.magicCard.supertype.indexOf(appliedFilters.supertype))\r\n//  === -1)\r\n// { return <div> </div>}\r\n\r\n //const filter = 'Rare'\r\n    //if(filter !==\"\" && props.magicCard.rarity.indexOf(filter) === -1) { return <div> </div>}\r\n    \r\n\r\n    // if\r\n    // (((appliedFilters.color && appliedFilters.rarity &&  appliedFilters.supertype) !==\"\")\r\n    //  && \r\n    // ((props.magicCard.colors.indexOf(appliedFilters.color) && props.magicCard.rarity.indexOf(appliedFilters.rarity) &&props.magicCard.supertypes.indexOf(appliedFilters.supertype) ) === -1))\r\n    //  { return <div> </div>}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Pagination =({cardsPerPage, totalCards, paginate}) =>{\r\n    const pageNumbers = [];\r\n\r\n    for(let i=1; i<=Math.ceil(totalCards / cardsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            {pageNumbers.map(number =>(\r\n             <Button\r\n                onClick={()=>paginate(number)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                >\r\n                {number}\r\n            </Button>\r\n            ))}\r\n            <br/><br/><br/><br/>\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","import React,{ useContext, useState,useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid' ;\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MagicCard from './CryptoCurrency';\r\nimport axios from 'axios';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport SortByAlpha from '@material-ui/icons/SortByAlpha';\r\nimport Pagination from './Pagination';\r\nimport {PageSizeFilterContext, ColorFilterContext, RarityFilterContext, SuperTypeFilterContext} from './FilterContext';\r\n\r\n\r\nfunction CardList(){\r\n    const [cards, setCards] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [filter, setFilter] = useState('');\r\n    const[sortType, setSortType]= useState('asc');\r\n    const [currentCard, setCurrentCard]= useState(1);\r\n\r\n    \r\n    const ascending= 'asc';\r\n    const descending='desc';\r\n\r\n     const[pageSizeFilter] =useContext(PageSizeFilterContext);\r\n     const[colorFilter] =useContext(ColorFilterContext);\r\n     const[rarityFilter] =useContext(RarityFilterContext);\r\n     const[superTypeFilter] =useContext(SuperTypeFilterContext);\r\n\r\n    useEffect( ()=>{\r\n    axios.get('https://api.magicthegathering.io/v1/cards')\r\n    .then(response =>\r\n        {\r\n            setCards(response.data.cards)\r\n            setLoading(false);\r\n            console.log(' pageSizeFilter   '+ pageSizeFilter)\r\n            console.log(' colorFilter   '+  colorFilter )\r\n            console.log(' rarityFilter   '+  rarityFilter )\r\n            console.log(' superTypeFilter   '+ superTypeFilter )\r\n        }       \r\n        )\r\n    .catch(error => {\r\n        console.log(error)\r\n        console.log('Could not fetch data from the API!')\r\n        setLoading(false);\r\n    })\r\n    },[])\r\n\r\n   const  handleSearchChange =(e)=>{\r\n        setFilter( e.target.value)\r\n    }\r\n\r\n    const sortedCards = cards.sort((a,b) => {\r\n        const isReversed = (sortType==='asc') ? 1 : -1;\r\n        return isReversed*a.name.localeCompare(b.name)\r\n    });\r\n    const toggleSort =() =>\r\n    {(sortType==='desc')? setSortType(ascending): setSortType(descending);}\r\n  \r\n    //Get current cards\r\n    const indexOfLastCard = currentCard*pageSizeFilter;\r\n    const indexOfFirstCard = indexOfLastCard - pageSizeFilter;\r\n    const currentCards = sortedCards.slice(indexOfFirstCard, indexOfLastCard)\r\n\r\n    //Change page\r\n    const paginate= pageNumber => setCurrentCard(pageNumber);\r\n\r\n    console.log(\"hhhhhhhh  \" + colorFilter );\r\n\r\n    if(loading)\r\n    {\r\n        return(<h1>Loading the cards...  This might take a few seconds.</h1>\r\n            )\r\n    }\r\n    else {\r\n       return(\r\n           <div>\r\n               {}\r\n               {sortedCards ? (\r\n                <div>\r\n                    {/* <div>\r\n                    <TextField style ={{padding: 24}}\r\n                    id = \"searchInput\"\r\n                    placeholder = \"Search for the cards\"\r\n                    margin = \"normal\"\r\n                    variant=\"filled\"\r\n                    onChange = {handleSearchChange} \r\n                    InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    </div> */}\r\n                    <div>\r\n                        <Button\r\n                            onClick ={toggleSort}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<SortByAlpha/>}\r\n                            >\r\n                            Sort\r\n                        </Button>\r\n                    </div>\r\n                    <Grid container spacing ={24} style= {{padding :80}}>\r\n                        {currentCards.map(currentCard =>\r\n                        (   (colorFilter !== '') ? \r\n                            (currentCard.colors.includes(colorFilter) && \r\n                            //currentCard.supertypes.includes(superTypeFilter) &&\r\n                            //currentCard.rarity.includes(rarityFilter) &&\r\n                            (\r\n                            currentCard.name.includes(filter) &&\r\n                            (<Grid item xs ={12} sm={6} lg={4} xl ={3} style= {{padding:30}}>\r\n                            <MagicCard magicCard= {currentCard} key={currentCard.id}/>\r\n                            </Grid>)\r\n                            )) :\r\n                            (\r\n                                currentCard.name.includes(filter) &&\r\n                                (<Grid item xs ={12} sm={6} lg={4} xl ={3} style= {{padding:30}}>\r\n                                <MagicCard magicCard= {currentCard} key={currentCard.id}/>\r\n                                </Grid>)\r\n                             )\r\n\r\n                        ))}\r\n                    </Grid>\r\n                    <Pagination \r\n                    cardsPerPage= {pageSizeFilter}\r\n                    totalCards= {cards.length}\r\n                    paginate= {paginate}/>\r\n                </div>  \r\n               ): \" \"}\r\n           </div>     \r\n  )\r\n }\r\n}\r\n\r\nexport default CardList\r\n//currentCard.colors.includes(this.state.filterColor)&&\r\n\r\n//currentCard.colors.includes(colorFilter) &&\r\n//currentCard.name.includes(filter) &&\r\n","import React from 'react';\r\n\r\nexport const themes ={\r\n    dark: {\r\n        color:'white',\r\n        background: 'black'\r\n    },\r\n    light:{\r\n        color:'black',\r\n        background: '#f8bbd0'\r\n    }  \r\n    };\r\n    const ThemeContext = React.createContext(themes.light);\r\n    export default ThemeContext;","import React,{useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport ThemeContext from './ThemeContext';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst DisplayCard = props =>{\r\n    const theme = useContext(ThemeContext);\r\n    const [cardDetails, fetchCardDetails]= useState({})\r\n    const[loading, setLoading] = useState(true)\r\n    useEffect( ()=>{\r\n        axios.get(`https://api.magicthegathering.io/v1/cards/${props.match.params.id}`)\r\n    .then(response =>\r\n        {\r\n            fetchCardDetails(response.data.card)\r\n            setLoading(false)\r\n        }       \r\n        )\r\n    .catch(error => {\r\n        console.log(error)\r\n        console.log('Could not fetch the card details from the API!')\r\n        setLoading(false)\r\n    })\r\n    },[])\r\n\r\n    const defaultProps = {\r\n        bgcolor: (cardDetails.rarity == 'Rare')? \"secondary.main\" : ((cardDetails.rarity  == 'Common')?'grey.500':'primary.main') ,\r\n        borderColor: 'text.primary',\r\n        m: 1,\r\n        border: 5,\r\n        style: { width: '20rem', height: '20rem' },\r\n      };\r\n\r\n    const handleBack =() =>{\r\n      props.history.goBack();\r\n    }\r\n    \r\n    console.log('KKKKKK' + props.match.params);  \r\n\r\n\r\n    if(loading)\r\n    {\r\n        return(<h1>Loading the card details...  This might take a few seconds.</h1>)\r\n    }\r\n    else{\r\n    return(\r\n        <div style = {theme} className =\"CardDetails\">\r\n           <h1>Magic Card Details!</h1>\r\n            <h2>{cardDetails.name}</h2>\r\n           <h3>\r\n           <Box marginLeft = '35%' borderRadius={16} {...defaultProps}> \r\n           <img src={cardDetails.imageUrl} alt=\"\"/>\r\n           </Box>\r\n           <br/>\r\n           Color: {cardDetails.colors} <br/>\r\n           Rarity: {cardDetails.rarity} <br/>\r\n           Layout: {cardDetails.layout} <br/>\r\n           {cardDetails.text} <br/>\r\n           </h3>\r\n           <br/>\r\n           <Button\r\n            onClick ={handleBack}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<ArrowBackIcon/>}\r\n            >\r\n            TO DASHBOARD\r\n        </Button>\r\n        <br/><br/>\r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default DisplayCard","import './App.css';\nimport React, {useState} from 'react';\nimport NavBar from './Components/NavBar';\nimport CardList from './Components/CryptoCurrenciesList';\nimport {BrowserRouter, Route,Switch}  from \"react-router-dom\";\nimport DisplayCard from \"./Components/DisplayCurrency\";\nimport ThemeContext, {themes} from './Components/ThemeContext';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Button from '@material-ui/core/Button';\nimport { Toolbar } from '@material-ui/core';\nimport {PageSizeFilterProvider, ColorFilterProvider, RarityFilterProvider, SuperTypeFilterProvider} from './Components/FilterContext';\n\nfunction App() {\n\n  // const [theme, setTheme] = useState(themes.light);\n  // const toggleTheme =() =>\n  //    theme === themes.dark? setTheme(themes.light): setTheme(themes.dark);\n    \n  return (\n    <div  className=\"App\">\n      {/* <ThemeContext.Provider value={theme}> */}\n       <BrowserRouter>\n       {/* <PageSizeFilterProvider> <ColorFilterProvider> <RarityFilterProvider> <SuperTypeFilterProvider> */}\n      <NavBar/>\n      <br/> <br/> <br/> <br/> <br/>\n      {/* <Toolbar style ={{\"paddingLeft\" : \"45%\"}}> */}\n      {/* <Button\n        onClick ={toggleTheme}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AutorenewIcon />}\n      >\n        Switch theme\n      </Button> */}\n      {/* </Toolbar> */}\n      <Switch>\n        <Route exact \n        path =\"/\" \n        render={(props) => <CardList {...props} />} />\n        <Route\n        path =\"/:id\" exact\n         component={DisplayCard} />\n      </Switch>\n      {/* </SuperTypeFilterProvider></RarityFilterProvider></ColorFilterProvider></PageSizeFilterProvider>  */}\n      </BrowserRouter>\n       {/* </ThemeContext.Provider> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}